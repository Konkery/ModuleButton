class ClassButton extends ClassSensor{constructor(opts){ClassSensor.call(this,opts,opts),this._Debounce=opts.debounce>0?opts.debounce:50,this._LastState=1,this._Time0,this.Configure({holdTime:opts.holdTime||.3,clickTime:opts.clickTime||.02})}OnSetWatch(){let timeDelta=getTime()-this._Time0,curr_state=digitalRead(this._Pins[0]);1==curr_state&&0==this._LastState?(timeDelta>=this._HoldTime&&this._Channels[0].emit("hold"),timeDelta>=this._ClickTime&&timeDelta<this._HoldTime&&this._Channels[0].emit("click"),this._Channels[0].emit("release")):this._Channels[0].emit("press"),this._Time0=getTime(),this._LastState=curr_state,this.Ch0_Value=curr_state}Start(){if(this._SetWatch)return!1;this._ChStatus[0]=1,this._SetWatch=setWatch(this.OnSetWatch.bind(this),this._Pins[0],{repeat:!0,edge:"both",debounce:this._Debounce})}Stop(){clearWatch(this._SetWatch),this._ChStatus[0]=0}Configure(opts){if(opts){let click_time=opts.clickTime,holdTime=opts.holdTime;(!this._HoldTime||this._HoldTime>click_time)&&click_time>0&&(this._ClickTime=click_time),holdTime>this._ClickTime&&(this._HoldTime=holdTime)}}}exports=ClassButton;